// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.8
// source: pando.proto

package api

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Action int32

const (
	Action__ Action = 0
	// sys
	Action_SysWithdraw       Action = 1
	Action_ActionSysProperty Action = 2
	// proposal
	Action_ProposalMake  Action = 11
	Action_ProposalShout Action = 12
	Action_ProposalVote  Action = 13
	// Collateral
	Action_CatCreate Action = 21
	Action_CatSupply Action = 22
	Action_CatEdit   Action = 23
	Action_CatFold   Action = 24
	// Vaults
	Action_VatOpen     Action = 31
	Action_VatDeposit  Action = 32
	Action_VatWithdraw Action = 33
	Action_VatPayback  Action = 34
	Action_VatGenerate Action = 35
	// Flips
	Action_FlipKick Action = 41
	Action_FlipBid  Action = 42
	Action_FlipDeal Action = 43
	// Oracles
	Action_OracleCreate Action = 51
	Action_OracleEdit   Action = 52
	Action_OraclePoke   Action = 53
	Action_OracleRely   Action = 54
	Action_OracleDeny   Action = 55
)

// Enum value maps for Action.
var (
	Action_name = map[int32]string{
		0:  "_",
		1:  "SysWithdraw",
		2:  "ActionSysProperty",
		11: "ProposalMake",
		12: "ProposalShout",
		13: "ProposalVote",
		21: "CatCreate",
		22: "CatSupply",
		23: "CatEdit",
		24: "CatFold",
		31: "VatOpen",
		32: "VatDeposit",
		33: "VatWithdraw",
		34: "VatPayback",
		35: "VatGenerate",
		41: "FlipKick",
		42: "FlipBid",
		43: "FlipDeal",
		51: "OracleCreate",
		52: "OracleEdit",
		53: "OraclePoke",
		54: "OracleRely",
		55: "OracleDeny",
	}
	Action_value = map[string]int32{
		"_":                 0,
		"SysWithdraw":       1,
		"ActionSysProperty": 2,
		"ProposalMake":      11,
		"ProposalShout":     12,
		"ProposalVote":      13,
		"CatCreate":         21,
		"CatSupply":         22,
		"CatEdit":           23,
		"CatFold":           24,
		"VatOpen":           31,
		"VatDeposit":        32,
		"VatWithdraw":       33,
		"VatPayback":        34,
		"VatGenerate":       35,
		"FlipKick":          41,
		"FlipBid":           42,
		"FlipDeal":          43,
		"OracleCreate":      51,
		"OracleEdit":        52,
		"OraclePoke":        53,
		"OracleRely":        54,
		"OracleDeny":        55,
	}
)

func (x Action) Enum() *Action {
	p := new(Action)
	*p = x
	return p
}

func (x Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Action) Descriptor() protoreflect.EnumDescriptor {
	return file_pando_proto_enumTypes[0].Descriptor()
}

func (Action) Type() protoreflect.EnumType {
	return &file_pando_proto_enumTypes[0]
}

func (x Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Action.Descriptor instead.
func (Action) EnumDescriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{0}
}

type Transaction_Status int32

const (
	Transaction_Pending Transaction_Status = 0
	Transaction_Abort   Transaction_Status = 1
	Transaction_OK      Transaction_Status = 2
)

// Enum value maps for Transaction_Status.
var (
	Transaction_Status_name = map[int32]string{
		0: "Pending",
		1: "Abort",
		2: "OK",
	}
	Transaction_Status_value = map[string]int32{
		"Pending": 0,
		"Abort":   1,
		"OK":      2,
	}
)

func (x Transaction_Status) Enum() *Transaction_Status {
	p := new(Transaction_Status)
	*p = x
	return p
}

func (x Transaction_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Transaction_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_pando_proto_enumTypes[1].Descriptor()
}

func (Transaction_Status) Type() protoreflect.EnumType {
	return &file_pando_proto_enumTypes[1]
}

func (x Transaction_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Transaction_Status.Descriptor instead.
func (Transaction_Status) EnumDescriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{6, 0}
}

type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextCursor string `protobuf:"bytes,1,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	HasNext    bool   `protobuf:"varint,2,opt,name=has_next,json=hasNext,proto3" json:"has_next,omitempty"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{0}
}

func (x *Pagination) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

func (x *Pagination) GetHasNext() bool {
	if x != nil {
		return x.HasNext
	}
	return false
}

type Asset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mixin asset id
	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Symbol  string `protobuf:"bytes,3,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Logo    string `protobuf:"bytes,4,opt,name=logo,proto3" json:"logo,omitempty"`
	ChainId string `protobuf:"bytes,5,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Chain   *Asset `protobuf:"bytes,6,opt,name=chain,proto3" json:"chain,omitempty"`
	Price   string `protobuf:"bytes,7,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *Asset) Reset() {
	*x = Asset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Asset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Asset) ProtoMessage() {}

func (x *Asset) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Asset.ProtoReflect.Descriptor instead.
func (*Asset) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{1}
}

func (x *Asset) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Asset) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Asset) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Asset) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *Asset) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *Asset) GetChain() *Asset {
	if x != nil {
		return x.Chain
	}
	return nil
}

func (x *Asset) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

type Collateral struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: swaggertype:"string" format:"date"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" swaggertype:"string" format:"date"`
	Name      string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Gem       string                 `protobuf:"bytes,4,opt,name=gem,proto3" json:"gem,omitempty"`
	Dai       string                 `protobuf:"bytes,5,opt,name=dai,proto3" json:"dai,omitempty"`
	Ink       string                 `protobuf:"bytes,6,opt,name=ink,proto3" json:"ink,omitempty"`
	Art       string                 `protobuf:"bytes,7,opt,name=art,proto3" json:"art,omitempty"`
	Rate      string                 `protobuf:"bytes,8,opt,name=rate,proto3" json:"rate,omitempty"`
	// @inject_tag: swaggertype:"string" format:"date"
	Rho            *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=rho,proto3" json:"rho,omitempty" swaggertype:"string" format:"date"`
	Debt           string                 `protobuf:"bytes,10,opt,name=debt,proto3" json:"debt,omitempty"`
	Line           string                 `protobuf:"bytes,11,opt,name=line,proto3" json:"line,omitempty"`
	Dust           string                 `protobuf:"bytes,12,opt,name=dust,proto3" json:"dust,omitempty"`
	Price          string                 `protobuf:"bytes,13,opt,name=price,proto3" json:"price,omitempty"`
	Mat            string                 `protobuf:"bytes,14,opt,name=mat,proto3" json:"mat,omitempty"`
	Duty           string                 `protobuf:"bytes,15,opt,name=duty,proto3" json:"duty,omitempty"`
	Chop           string                 `protobuf:"bytes,16,opt,name=chop,proto3" json:"chop,omitempty"`
	Dunk           string                 `protobuf:"bytes,17,opt,name=dunk,proto3" json:"dunk,omitempty"`
	Beg            string                 `protobuf:"bytes,18,opt,name=beg,proto3" json:"beg,omitempty"`
	Ttl            int32                  `protobuf:"varint,19,opt,name=ttl,proto3" json:"ttl,omitempty"`
	Tau            int32                  `protobuf:"varint,20,opt,name=tau,proto3" json:"tau,omitempty"`
	Live           bool                   `protobuf:"varint,21,opt,name=live,proto3" json:"live,omitempty"`
	NumberOfVaults int64                  `protobuf:"varint,22,opt,name=number_of_vaults,json=numberOfVaults,proto3" json:"number_of_vaults,omitempty"`
	Box            string                 `protobuf:"bytes,23,opt,name=box,proto3" json:"box,omitempty"`
	Litter         string                 `protobuf:"bytes,24,opt,name=litter,proto3" json:"litter,omitempty"`
	Supply         string                 `protobuf:"bytes,25,opt,name=supply,proto3" json:"supply,omitempty"`
}

func (x *Collateral) Reset() {
	*x = Collateral{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Collateral) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Collateral) ProtoMessage() {}

func (x *Collateral) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Collateral.ProtoReflect.Descriptor instead.
func (*Collateral) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{2}
}

func (x *Collateral) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Collateral) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Collateral) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Collateral) GetGem() string {
	if x != nil {
		return x.Gem
	}
	return ""
}

func (x *Collateral) GetDai() string {
	if x != nil {
		return x.Dai
	}
	return ""
}

func (x *Collateral) GetInk() string {
	if x != nil {
		return x.Ink
	}
	return ""
}

func (x *Collateral) GetArt() string {
	if x != nil {
		return x.Art
	}
	return ""
}

func (x *Collateral) GetRate() string {
	if x != nil {
		return x.Rate
	}
	return ""
}

func (x *Collateral) GetRho() *timestamppb.Timestamp {
	if x != nil {
		return x.Rho
	}
	return nil
}

func (x *Collateral) GetDebt() string {
	if x != nil {
		return x.Debt
	}
	return ""
}

func (x *Collateral) GetLine() string {
	if x != nil {
		return x.Line
	}
	return ""
}

func (x *Collateral) GetDust() string {
	if x != nil {
		return x.Dust
	}
	return ""
}

func (x *Collateral) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *Collateral) GetMat() string {
	if x != nil {
		return x.Mat
	}
	return ""
}

func (x *Collateral) GetDuty() string {
	if x != nil {
		return x.Duty
	}
	return ""
}

func (x *Collateral) GetChop() string {
	if x != nil {
		return x.Chop
	}
	return ""
}

func (x *Collateral) GetDunk() string {
	if x != nil {
		return x.Dunk
	}
	return ""
}

func (x *Collateral) GetBeg() string {
	if x != nil {
		return x.Beg
	}
	return ""
}

func (x *Collateral) GetTtl() int32 {
	if x != nil {
		return x.Ttl
	}
	return 0
}

func (x *Collateral) GetTau() int32 {
	if x != nil {
		return x.Tau
	}
	return 0
}

func (x *Collateral) GetLive() bool {
	if x != nil {
		return x.Live
	}
	return false
}

func (x *Collateral) GetNumberOfVaults() int64 {
	if x != nil {
		return x.NumberOfVaults
	}
	return 0
}

func (x *Collateral) GetBox() string {
	if x != nil {
		return x.Box
	}
	return ""
}

func (x *Collateral) GetLitter() string {
	if x != nil {
		return x.Litter
	}
	return ""
}

func (x *Collateral) GetSupply() string {
	if x != nil {
		return x.Supply
	}
	return ""
}

type Vault struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: swaggertype:"string" format:"date"
	CreatedAt    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" swaggertype:"string" format:"date"`
	CollateralId string                 `protobuf:"bytes,3,opt,name=collateral_id,json=collateralId,proto3" json:"collateral_id,omitempty"`
	Ink          string                 `protobuf:"bytes,4,opt,name=ink,proto3" json:"ink,omitempty"`
	Art          string                 `protobuf:"bytes,5,opt,name=art,proto3" json:"art,omitempty"`
	IdentityId   int64                  `protobuf:"varint,6,opt,name=identity_id,json=identityId,proto3" json:"identity_id,omitempty"`
}

func (x *Vault) Reset() {
	*x = Vault{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vault) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vault) ProtoMessage() {}

func (x *Vault) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vault.ProtoReflect.Descriptor instead.
func (*Vault) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{3}
}

func (x *Vault) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Vault) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Vault) GetCollateralId() string {
	if x != nil {
		return x.CollateralId
	}
	return ""
}

func (x *Vault) GetInk() string {
	if x != nil {
		return x.Ink
	}
	return ""
}

func (x *Vault) GetArt() string {
	if x != nil {
		return x.Art
	}
	return ""
}

func (x *Vault) GetIdentityId() int64 {
	if x != nil {
		return x.IdentityId
	}
	return 0
}

type Flip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: swaggertype:"string" format:"date"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" swaggertype:"string" format:"date"`
	// @inject_tag: swaggertype:"string" format:"date"
	Tic *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=tic,proto3" json:"tic,omitempty" swaggertype:"string" format:"date"`
	// @inject_tag: swaggertype:"string" format:"date"
	End          *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end,proto3" json:"end,omitempty" swaggertype:"string" format:"date"`
	Bid          string                 `protobuf:"bytes,5,opt,name=bid,proto3" json:"bid,omitempty"`
	Lot          string                 `protobuf:"bytes,6,opt,name=lot,proto3" json:"lot,omitempty"`
	Tab          string                 `protobuf:"bytes,7,opt,name=tab,proto3" json:"tab,omitempty"`
	Art          string                 `protobuf:"bytes,8,opt,name=art,proto3" json:"art,omitempty"`
	CollateralId string                 `protobuf:"bytes,9,opt,name=collateral_id,json=collateralId,proto3" json:"collateral_id,omitempty"`
	VaultId      string                 `protobuf:"bytes,10,opt,name=vault_id,json=vaultId,proto3" json:"vault_id,omitempty"`
	Guy          string                 `protobuf:"bytes,11,opt,name=Guy,proto3" json:"Guy,omitempty"`
	Action       Action                 `protobuf:"varint,12,opt,name=action,proto3,enum=fox.pando.service.Action" json:"action,omitempty"`
}

func (x *Flip) Reset() {
	*x = Flip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Flip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Flip) ProtoMessage() {}

func (x *Flip) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Flip.ProtoReflect.Descriptor instead.
func (*Flip) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{4}
}

func (x *Flip) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Flip) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Flip) GetTic() *timestamppb.Timestamp {
	if x != nil {
		return x.Tic
	}
	return nil
}

func (x *Flip) GetEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.End
	}
	return nil
}

func (x *Flip) GetBid() string {
	if x != nil {
		return x.Bid
	}
	return ""
}

func (x *Flip) GetLot() string {
	if x != nil {
		return x.Lot
	}
	return ""
}

func (x *Flip) GetTab() string {
	if x != nil {
		return x.Tab
	}
	return ""
}

func (x *Flip) GetArt() string {
	if x != nil {
		return x.Art
	}
	return ""
}

func (x *Flip) GetCollateralId() string {
	if x != nil {
		return x.CollateralId
	}
	return ""
}

func (x *Flip) GetVaultId() string {
	if x != nil {
		return x.VaultId
	}
	return ""
}

func (x *Flip) GetGuy() string {
	if x != nil {
		return x.Guy
	}
	return ""
}

func (x *Flip) GetAction() Action {
	if x != nil {
		return x.Action
	}
	return Action__
}

type Oracle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId string `protobuf:"bytes,1,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	Hop     int32  `protobuf:"varint,2,opt,name=hop,proto3" json:"hop,omitempty"`
	Current string `protobuf:"bytes,3,opt,name=current,proto3" json:"current,omitempty"`
	Next    string `protobuf:"bytes,4,opt,name=next,proto3" json:"next,omitempty"`
	// @inject_tag: swaggertype:"string" format:"date"
	// last update of current price
	PeekAt    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=peek_at,json=peekAt,proto3" json:"peek_at,omitempty" swaggertype:"string" format:"date"`
	Threshold int32                  `protobuf:"varint,6,opt,name=threshold,proto3" json:"threshold,omitempty"`
	Governors []string               `protobuf:"bytes,7,rep,name=governors,proto3" json:"governors,omitempty"`
}

func (x *Oracle) Reset() {
	*x = Oracle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Oracle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Oracle) ProtoMessage() {}

func (x *Oracle) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Oracle.ProtoReflect.Descriptor instead.
func (*Oracle) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{5}
}

func (x *Oracle) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *Oracle) GetHop() int32 {
	if x != nil {
		return x.Hop
	}
	return 0
}

func (x *Oracle) GetCurrent() string {
	if x != nil {
		return x.Current
	}
	return ""
}

func (x *Oracle) GetNext() string {
	if x != nil {
		return x.Next
	}
	return ""
}

func (x *Oracle) GetPeekAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PeekAt
	}
	return nil
}

func (x *Oracle) GetThreshold() int32 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

func (x *Oracle) GetGovernors() []string {
	if x != nil {
		return x.Governors
	}
	return nil
}

type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// @inject_tag: swaggertype:"string" format:"date"
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" swaggertype:"string" format:"date"`
	AssetId    string                 `protobuf:"bytes,3,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	Amount     string                 `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Action     Action                 `protobuf:"varint,5,opt,name=action,proto3,enum=fox.pando.service.Action" json:"action,omitempty"`
	Status     Transaction_Status     `protobuf:"varint,6,opt,name=status,proto3,enum=fox.pando.service.Transaction_Status" json:"status,omitempty"`
	Msg        string                 `protobuf:"bytes,7,opt,name=msg,proto3" json:"msg,omitempty"`
	Parameters string                 `protobuf:"bytes,8,opt,name=parameters,proto3" json:"parameters,omitempty"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{6}
}

func (x *Transaction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Transaction) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Transaction) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *Transaction) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *Transaction) GetAction() Action {
	if x != nil {
		return x.Action
	}
	return Action__
}

func (x *Transaction) GetStatus() Transaction_Status {
	if x != nil {
		return x.Status
	}
	return Transaction_Pending
}

func (x *Transaction) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *Transaction) GetParameters() string {
	if x != nil {
		return x.Parameters
	}
	return ""
}

type Req struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Req) Reset() {
	*x = Req{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req) ProtoMessage() {}

func (x *Req) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req.ProtoReflect.Descriptor instead.
func (*Req) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{7}
}

type Resp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Resp) Reset() {
	*x = Resp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resp) ProtoMessage() {}

func (x *Resp) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resp.ProtoReflect.Descriptor instead.
func (*Resp) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{8}
}

type Vault_Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VaultId string `protobuf:"bytes,1,opt,name=vault_id,json=vaultId,proto3" json:"vault_id,omitempty"`
	// @inject_tag: swaggertype:"string" format:"date"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" swaggertype:"string" format:"date"`
	Action    Action                 `protobuf:"varint,3,opt,name=action,proto3,enum=fox.pando.service.Action" json:"action,omitempty"`
	Dink      string                 `protobuf:"bytes,4,opt,name=dink,proto3" json:"dink,omitempty"`
	Dart      string                 `protobuf:"bytes,5,opt,name=dart,proto3" json:"dart,omitempty"`
	Debt      string                 `protobuf:"bytes,6,opt,name=debt,proto3" json:"debt,omitempty"`
}

func (x *Vault_Event) Reset() {
	*x = Vault_Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Vault_Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vault_Event) ProtoMessage() {}

func (x *Vault_Event) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vault_Event.ProtoReflect.Descriptor instead.
func (*Vault_Event) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{3, 0}
}

func (x *Vault_Event) GetVaultId() string {
	if x != nil {
		return x.VaultId
	}
	return ""
}

func (x *Vault_Event) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Vault_Event) GetAction() Action {
	if x != nil {
		return x.Action
	}
	return Action__
}

func (x *Vault_Event) GetDink() string {
	if x != nil {
		return x.Dink
	}
	return ""
}

func (x *Vault_Event) GetDart() string {
	if x != nil {
		return x.Dart
	}
	return ""
}

func (x *Vault_Event) GetDebt() string {
	if x != nil {
		return x.Debt
	}
	return ""
}

type Flip_Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlipId string `protobuf:"bytes,1,opt,name=flip_id,json=flipId,proto3" json:"flip_id,omitempty"`
	// @inject_tag: swaggertype:"string" format:"date"
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" swaggertype:"string" format:"date"`
	Action    Action                 `protobuf:"varint,3,opt,name=action,proto3,enum=fox.pando.service.Action" json:"action,omitempty"`
	Bid       string                 `protobuf:"bytes,4,opt,name=bid,proto3" json:"bid,omitempty"`
	Lot       string                 `protobuf:"bytes,5,opt,name=lot,proto3" json:"lot,omitempty"`
}

func (x *Flip_Event) Reset() {
	*x = Flip_Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Flip_Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Flip_Event) ProtoMessage() {}

func (x *Flip_Event) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Flip_Event.ProtoReflect.Descriptor instead.
func (*Flip_Event) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{4, 0}
}

func (x *Flip_Event) GetFlipId() string {
	if x != nil {
		return x.FlipId
	}
	return ""
}

func (x *Flip_Event) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Flip_Event) GetAction() Action {
	if x != nil {
		return x.Action
	}
	return Action__
}

func (x *Flip_Event) GetBid() string {
	if x != nil {
		return x.Bid
	}
	return ""
}

func (x *Flip_Event) GetLot() string {
	if x != nil {
		return x.Lot
	}
	return ""
}

type Req_FindAsset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: valid:"uuid,required"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" valid:"uuid,required"`
}

func (x *Req_FindAsset) Reset() {
	*x = Req_FindAsset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Req_FindAsset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req_FindAsset) ProtoMessage() {}

func (x *Req_FindAsset) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req_FindAsset.ProtoReflect.Descriptor instead.
func (*Req_FindAsset) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{7, 0}
}

func (x *Req_FindAsset) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Req_ListAssets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Req_ListAssets) Reset() {
	*x = Req_ListAssets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Req_ListAssets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req_ListAssets) ProtoMessage() {}

func (x *Req_ListAssets) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req_ListAssets.ProtoReflect.Descriptor instead.
func (*Req_ListAssets) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{7, 1}
}

type Req_FindOracle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: valid:"uuid,required"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" valid:"uuid,required"`
}

func (x *Req_FindOracle) Reset() {
	*x = Req_FindOracle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Req_FindOracle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req_FindOracle) ProtoMessage() {}

func (x *Req_FindOracle) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req_FindOracle.ProtoReflect.Descriptor instead.
func (*Req_FindOracle) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{7, 2}
}

func (x *Req_FindOracle) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Req_ListOracles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Req_ListOracles) Reset() {
	*x = Req_ListOracles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Req_ListOracles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req_ListOracles) ProtoMessage() {}

func (x *Req_ListOracles) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req_ListOracles.ProtoReflect.Descriptor instead.
func (*Req_ListOracles) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{7, 3}
}

// List All Collaterals
type Req_ListCollaterals struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Req_ListCollaterals) Reset() {
	*x = Req_ListCollaterals{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Req_ListCollaterals) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req_ListCollaterals) ProtoMessage() {}

func (x *Req_ListCollaterals) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req_ListCollaterals.ProtoReflect.Descriptor instead.
func (*Req_ListCollaterals) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{7, 4}
}

// Find Collateral By TraceID
type Req_FindCollateral struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: valid:"uuid,required"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" valid:"uuid,required"`
}

func (x *Req_FindCollateral) Reset() {
	*x = Req_FindCollateral{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Req_FindCollateral) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req_FindCollateral) ProtoMessage() {}

func (x *Req_FindCollateral) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req_FindCollateral.ProtoReflect.Descriptor instead.
func (*Req_FindCollateral) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{7, 5}
}

func (x *Req_FindCollateral) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Req_FindVault struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: valid:"uuid,required"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" valid:"uuid,required"`
}

func (x *Req_FindVault) Reset() {
	*x = Req_FindVault{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Req_FindVault) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req_FindVault) ProtoMessage() {}

func (x *Req_FindVault) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req_FindVault.ProtoReflect.Descriptor instead.
func (*Req_FindVault) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{7, 6}
}

func (x *Req_FindVault) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// List All Vaults
type Req_ListVaults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CollateralId string `protobuf:"bytes,1,opt,name=collateral_id,json=collateralId,proto3" json:"collateral_id,omitempty"`
	UserId       string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Cursor       string `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Limit        int64  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *Req_ListVaults) Reset() {
	*x = Req_ListVaults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Req_ListVaults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req_ListVaults) ProtoMessage() {}

func (x *Req_ListVaults) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req_ListVaults.ProtoReflect.Descriptor instead.
func (*Req_ListVaults) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{7, 7}
}

func (x *Req_ListVaults) GetCollateralId() string {
	if x != nil {
		return x.CollateralId
	}
	return ""
}

func (x *Req_ListVaults) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Req_ListVaults) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *Req_ListVaults) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type Req_ListMyVaults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cursor string `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Limit  int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *Req_ListMyVaults) Reset() {
	*x = Req_ListMyVaults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Req_ListMyVaults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req_ListMyVaults) ProtoMessage() {}

func (x *Req_ListMyVaults) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req_ListMyVaults.ProtoReflect.Descriptor instead.
func (*Req_ListMyVaults) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{7, 8}
}

func (x *Req_ListMyVaults) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *Req_ListMyVaults) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type Req_ListVaultEvents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: valid:"uuid,required"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" valid:"uuid,required"`
}

func (x *Req_ListVaultEvents) Reset() {
	*x = Req_ListVaultEvents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Req_ListVaultEvents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req_ListVaultEvents) ProtoMessage() {}

func (x *Req_ListVaultEvents) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req_ListVaultEvents.ProtoReflect.Descriptor instead.
func (*Req_ListVaultEvents) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{7, 9}
}

func (x *Req_ListVaultEvents) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Req_FindFlip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: valid:"uuid,required"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" valid:"uuid,required"`
}

func (x *Req_FindFlip) Reset() {
	*x = Req_FindFlip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Req_FindFlip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req_FindFlip) ProtoMessage() {}

func (x *Req_FindFlip) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req_FindFlip.ProtoReflect.Descriptor instead.
func (*Req_FindFlip) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{7, 10}
}

func (x *Req_FindFlip) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Req_ListFlips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cursor string `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Limit  int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *Req_ListFlips) Reset() {
	*x = Req_ListFlips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Req_ListFlips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req_ListFlips) ProtoMessage() {}

func (x *Req_ListFlips) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req_ListFlips.ProtoReflect.Descriptor instead.
func (*Req_ListFlips) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{7, 11}
}

func (x *Req_ListFlips) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *Req_ListFlips) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type Req_ListFlipEvents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Req_ListFlipEvents) Reset() {
	*x = Req_ListFlipEvents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Req_ListFlipEvents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req_ListFlipEvents) ProtoMessage() {}

func (x *Req_ListFlipEvents) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req_ListFlipEvents.ProtoReflect.Descriptor instead.
func (*Req_ListFlipEvents) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{7, 12}
}

func (x *Req_ListFlipEvents) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Find Tx By FollowID
type Req_FindTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: valid:"uuid,required"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" valid:"uuid,required"`
}

func (x *Req_FindTransaction) Reset() {
	*x = Req_FindTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Req_FindTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req_FindTransaction) ProtoMessage() {}

func (x *Req_FindTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req_FindTransaction.ProtoReflect.Descriptor instead.
func (*Req_FindTransaction) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{7, 13}
}

func (x *Req_FindTransaction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Req_ListTransactions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cursor string `protobuf:"bytes,1,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Limit  int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *Req_ListTransactions) Reset() {
	*x = Req_ListTransactions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Req_ListTransactions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req_ListTransactions) ProtoMessage() {}

func (x *Req_ListTransactions) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req_ListTransactions.ProtoReflect.Descriptor instead.
func (*Req_ListTransactions) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{7, 14}
}

func (x *Req_ListTransactions) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *Req_ListTransactions) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type Resp_ListAssets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Assets []*Asset `protobuf:"bytes,1,rep,name=assets,proto3" json:"assets,omitempty"`
}

func (x *Resp_ListAssets) Reset() {
	*x = Resp_ListAssets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resp_ListAssets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resp_ListAssets) ProtoMessage() {}

func (x *Resp_ListAssets) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resp_ListAssets.ProtoReflect.Descriptor instead.
func (*Resp_ListAssets) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{8, 0}
}

func (x *Resp_ListAssets) GetAssets() []*Asset {
	if x != nil {
		return x.Assets
	}
	return nil
}

type Resp_ListOracles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Oracles []*Oracle `protobuf:"bytes,1,rep,name=oracles,proto3" json:"oracles,omitempty"`
}

func (x *Resp_ListOracles) Reset() {
	*x = Resp_ListOracles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resp_ListOracles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resp_ListOracles) ProtoMessage() {}

func (x *Resp_ListOracles) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resp_ListOracles.ProtoReflect.Descriptor instead.
func (*Resp_ListOracles) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{8, 1}
}

func (x *Resp_ListOracles) GetOracles() []*Oracle {
	if x != nil {
		return x.Oracles
	}
	return nil
}

type Resp_ListCollaterals struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Collaterals []*Collateral `protobuf:"bytes,1,rep,name=collaterals,proto3" json:"collaterals,omitempty"`
}

func (x *Resp_ListCollaterals) Reset() {
	*x = Resp_ListCollaterals{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resp_ListCollaterals) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resp_ListCollaterals) ProtoMessage() {}

func (x *Resp_ListCollaterals) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resp_ListCollaterals.ProtoReflect.Descriptor instead.
func (*Resp_ListCollaterals) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{8, 2}
}

func (x *Resp_ListCollaterals) GetCollaterals() []*Collateral {
	if x != nil {
		return x.Collaterals
	}
	return nil
}

type Resp_ListVaults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vaults     []*Vault    `protobuf:"bytes,1,rep,name=vaults,proto3" json:"vaults,omitempty"`
	Pagination *Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *Resp_ListVaults) Reset() {
	*x = Resp_ListVaults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resp_ListVaults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resp_ListVaults) ProtoMessage() {}

func (x *Resp_ListVaults) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resp_ListVaults.ProtoReflect.Descriptor instead.
func (*Resp_ListVaults) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{8, 3}
}

func (x *Resp_ListVaults) GetVaults() []*Vault {
	if x != nil {
		return x.Vaults
	}
	return nil
}

func (x *Resp_ListVaults) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type Resp_ListVaultEvents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*Vault_Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *Resp_ListVaultEvents) Reset() {
	*x = Resp_ListVaultEvents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resp_ListVaultEvents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resp_ListVaultEvents) ProtoMessage() {}

func (x *Resp_ListVaultEvents) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resp_ListVaultEvents.ProtoReflect.Descriptor instead.
func (*Resp_ListVaultEvents) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{8, 4}
}

func (x *Resp_ListVaultEvents) GetEvents() []*Vault_Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type Resp_ListFlips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flips      []*Flip     `protobuf:"bytes,1,rep,name=flips,proto3" json:"flips,omitempty"`
	Pagination *Pagination `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *Resp_ListFlips) Reset() {
	*x = Resp_ListFlips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resp_ListFlips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resp_ListFlips) ProtoMessage() {}

func (x *Resp_ListFlips) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resp_ListFlips.ProtoReflect.Descriptor instead.
func (*Resp_ListFlips) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{8, 5}
}

func (x *Resp_ListFlips) GetFlips() []*Flip {
	if x != nil {
		return x.Flips
	}
	return nil
}

func (x *Resp_ListFlips) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type Resp_ListFlipEvents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*Flip_Event `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *Resp_ListFlipEvents) Reset() {
	*x = Resp_ListFlipEvents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resp_ListFlipEvents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resp_ListFlipEvents) ProtoMessage() {}

func (x *Resp_ListFlipEvents) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resp_ListFlipEvents.ProtoReflect.Descriptor instead.
func (*Resp_ListFlipEvents) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{8, 6}
}

func (x *Resp_ListFlipEvents) GetEvents() []*Flip_Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type Resp_ListTransactions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transactions []*Transaction `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	Pagination   *Pagination    `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *Resp_ListTransactions) Reset() {
	*x = Resp_ListTransactions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pando_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resp_ListTransactions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resp_ListTransactions) ProtoMessage() {}

func (x *Resp_ListTransactions) ProtoReflect() protoreflect.Message {
	mi := &file_pando_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resp_ListTransactions.ProtoReflect.Descriptor instead.
func (*Resp_ListTransactions) Descriptor() ([]byte, []int) {
	return file_pando_proto_rawDescGZIP(), []int{8, 7}
}

func (x *Resp_ListTransactions) GetTransactions() []*Transaction {
	if x != nil {
		return x.Transactions
	}
	return nil
}

func (x *Resp_ListTransactions) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

var File_pando_proto protoreflect.FileDescriptor

var file_pando_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x66,
	0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x48, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4e, 0x65, 0x78, 0x74, 0x22, 0xb8, 0x01, 0x0a, 0x05,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64,
	0x12, 0x2e, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0xcb, 0x04, 0x0a, 0x0a, 0x43, 0x6f, 0x6c, 0x6c, 0x61,
	0x74, 0x65, 0x72, 0x61, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x65, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x67, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x61, 0x69, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x61, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6e, 0x6b, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x6e, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x72,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65,
	0x12, 0x2c, 0x0a, 0x03, 0x72, 0x68, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x72, 0x68, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x65, 0x62, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65,
	0x62, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x75, 0x73, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x75, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x75, 0x74, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x75, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x68, 0x6f, 0x70, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x68, 0x6f, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x75,
	0x6e, 0x6b, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x75, 0x6e, 0x6b, 0x12, 0x10,
	0x0a, 0x03, 0x62, 0x65, 0x67, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x62, 0x65, 0x67,
	0x12, 0x10, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74,
	0x74, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x75, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x74, 0x61, 0x75, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x6f, 0x66, 0x5f, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x4f, 0x66, 0x56, 0x61, 0x75, 0x6c,
	0x74, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x6f, 0x78, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x62, 0x6f, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x69, 0x74, 0x74, 0x65, 0x72, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x69, 0x74, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x75,
	0x70, 0x70, 0x6c, 0x79, 0x22, 0x8b, 0x03, 0x0a, 0x05, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6c,
	0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x6e, 0x6b,
	0x12, 0x10, 0x0a, 0x03, 0x61, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61,
	0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x1a, 0xcc, 0x01, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x69, 0x6e, 0x6b, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x69, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x72, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x65, 0x62, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65,
	0x62, 0x74, 0x22, 0xaf, 0x04, 0x0a, 0x04, 0x46, 0x6c, 0x69, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2c, 0x0a, 0x03, 0x74, 0x69, 0x63, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x03, 0x74, 0x69, 0x63, 0x12, 0x2c, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x03, 0x65,
	0x6e, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x62, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6c, 0x6f, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x62, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x62, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x72, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x72, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f,
	0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x47, 0x75,
	0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x47, 0x75, 0x79, 0x12, 0x31, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x66,
	0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a,
	0xb2, 0x01, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x6c, 0x69,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6c, 0x69, 0x70,
	0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x31, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e,
	0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x10, 0x0a, 0x03, 0x62, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x62,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6c, 0x6f, 0x74, 0x22, 0xd4, 0x01, 0x0a, 0x06, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x68, 0x6f,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x68, 0x6f, 0x70, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x65, 0x78, 0x74, 0x12, 0x33, 0x0a, 0x07, 0x70, 0x65,
	0x65, 0x6b, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x70, 0x65, 0x65, 0x6b, 0x41, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6f, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x67, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x6f, 0x72, 0x73, 0x22, 0xd9, 0x02, 0x0a, 0x0b,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x66, 0x6f, 0x78, 0x2e,
	0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x66,
	0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x22, 0x28, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x10, 0x01, 0x12,
	0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x02, 0x22, 0xe8, 0x04, 0x0a, 0x03, 0x52, 0x65, 0x71, 0x1a,
	0x1b, 0x0a, 0x09, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x1a, 0x0c, 0x0a, 0x0a,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x1a, 0x1c, 0x0a, 0x0a, 0x46, 0x69,
	0x6e, 0x64, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x1a, 0x0d, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74,
	0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x73, 0x1a, 0x11, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x73, 0x1a, 0x20, 0x0a, 0x0e, 0x46, 0x69,
	0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x1a, 0x1b, 0x0a, 0x09,
	0x46, 0x69, 0x6e, 0x64, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x1a, 0x78, 0x0a, 0x0a, 0x4c, 0x69, 0x73,
	0x74, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x61,
	0x74, 0x65, 0x72, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x1a, 0x3c, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x56, 0x61, 0x75,
	0x6c, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x1a, 0x21, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x1a, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6e, 0x64, 0x46, 0x6c, 0x69, 0x70,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x1a, 0x39, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6c, 0x69, 0x70, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x1a, 0x20, 0x0a, 0x0e, 0x4c,
	0x69, 0x73, 0x74, 0x46, 0x6c, 0x69, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x1a, 0x21, 0x0a,
	0x0f, 0x46, 0x69, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x1a, 0x40, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x22, 0x84, 0x06, 0x0a, 0x04, 0x52, 0x65, 0x73, 0x70, 0x1a, 0x3e, 0x0a, 0x0a, 0x4c,
	0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x06, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x6f, 0x78, 0x2e,
	0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x52, 0x06, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x1a, 0x42, 0x0a, 0x0b, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x07, 0x6f, 0x72,
	0x61, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66, 0x6f,
	0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x52, 0x07, 0x6f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x73, 0x1a,
	0x52, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61,
	0x6c, 0x73, 0x12, 0x3f, 0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61,
	0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6c, 0x6c,
	0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72,
	0x61, 0x6c, 0x73, 0x1a, 0x7d, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x75, 0x6c, 0x74,
	0x73, 0x12, 0x30, 0x0a, 0x06, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x76, 0x61, 0x75,
	0x6c, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61,
	0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x1a, 0x49, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x36, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64,
	0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x79, 0x0a,
	0x09, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6c, 0x69, 0x70, 0x73, 0x12, 0x2d, 0x0a, 0x05, 0x66, 0x6c,
	0x69, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x66, 0x6f, 0x78, 0x2e,
	0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x6c,
	0x69, 0x70, 0x52, 0x05, 0x66, 0x6c, 0x69, 0x70, 0x73, 0x12, 0x3d, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x47, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74,
	0x46, 0x6c, 0x69, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x35, 0x0a, 0x06, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x6f, 0x78,
	0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46,
	0x6c, 0x69, 0x70, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x1a, 0x95, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x42, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x66,
	0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3d, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2a, 0xf0, 0x02, 0x0a, 0x06, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x05, 0x0a, 0x01, 0x5f, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x53,
	0x79, 0x73, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x79, 0x73, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x4d,
	0x61, 0x6b, 0x65, 0x10, 0x0b, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x53, 0x68, 0x6f, 0x75, 0x74, 0x10, 0x0c, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x56, 0x6f, 0x74, 0x65, 0x10, 0x0d, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x61,
	0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x10, 0x15, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x61, 0x74,
	0x53, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x10, 0x16, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x61, 0x74, 0x45,
	0x64, 0x69, 0x74, 0x10, 0x17, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x61, 0x74, 0x46, 0x6f, 0x6c, 0x64,
	0x10, 0x18, 0x12, 0x0b, 0x0a, 0x07, 0x56, 0x61, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x10, 0x1f, 0x12,
	0x0e, 0x0a, 0x0a, 0x56, 0x61, 0x74, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x10, 0x20, 0x12,
	0x0f, 0x0a, 0x0b, 0x56, 0x61, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x10, 0x21,
	0x12, 0x0e, 0x0a, 0x0a, 0x56, 0x61, 0x74, 0x50, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x10, 0x22,
	0x12, 0x0f, 0x0a, 0x0b, 0x56, 0x61, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x10,
	0x23, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x6c, 0x69, 0x70, 0x4b, 0x69, 0x63, 0x6b, 0x10, 0x29, 0x12,
	0x0b, 0x0a, 0x07, 0x46, 0x6c, 0x69, 0x70, 0x42, 0x69, 0x64, 0x10, 0x2a, 0x12, 0x0c, 0x0a, 0x08,
	0x46, 0x6c, 0x69, 0x70, 0x44, 0x65, 0x61, 0x6c, 0x10, 0x2b, 0x12, 0x10, 0x0a, 0x0c, 0x4f, 0x72,
	0x61, 0x63, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x10, 0x33, 0x12, 0x0e, 0x0a, 0x0a,
	0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x45, 0x64, 0x69, 0x74, 0x10, 0x34, 0x12, 0x0e, 0x0a, 0x0a,
	0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x50, 0x6f, 0x6b, 0x65, 0x10, 0x35, 0x12, 0x0e, 0x0a, 0x0a,
	0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x6c, 0x79, 0x10, 0x36, 0x12, 0x0e, 0x0a, 0x0a,
	0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x6e, 0x79, 0x10, 0x37, 0x32, 0x9b, 0x0a, 0x0a,
	0x05, 0x50, 0x61, 0x6e, 0x64, 0x6f, 0x12, 0x47, 0x0a, 0x09, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x12, 0x20, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x1a, 0x18, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64,
	0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12,
	0x53, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x21, 0x2e,
	0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x52, 0x65, 0x71, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73,
	0x1a, 0x22, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x73, 0x12, 0x4a, 0x0a, 0x0a, 0x46, 0x69, 0x6e, 0x64, 0x4f, 0x72, 0x61, 0x63,
	0x6c, 0x65, 0x12, 0x21, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4f,
	0x72, 0x61, 0x63, 0x6c, 0x65, 0x1a, 0x19, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64,
	0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65,
	0x12, 0x56, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x73, 0x12,
	0x22, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x61, 0x63,
	0x6c, 0x65, 0x73, 0x1a, 0x23, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x4f, 0x72, 0x61, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x62, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x73, 0x12, 0x26, 0x2e, 0x66, 0x6f,
	0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x52, 0x65, 0x71, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72,
	0x61, 0x6c, 0x73, 0x1a, 0x27, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x73, 0x12, 0x56, 0x0a, 0x0e,
	0x46, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x12, 0x25,
	0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x6c, 0x61,
	0x74, 0x65, 0x72, 0x61, 0x6c, 0x1a, 0x1d, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64,
	0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74,
	0x65, 0x72, 0x61, 0x6c, 0x12, 0x47, 0x0a, 0x09, 0x46, 0x69, 0x6e, 0x64, 0x56, 0x61, 0x75, 0x6c,
	0x74, 0x12, 0x20, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x56, 0x61,
	0x75, 0x6c, 0x74, 0x1a, 0x18, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x53, 0x0a,
	0x0a, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x21, 0x2e, 0x66, 0x6f,
	0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x52, 0x65, 0x71, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0x22,
	0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x75, 0x6c,
	0x74, 0x73, 0x12, 0x57, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x79, 0x56, 0x61, 0x75, 0x6c,
	0x74, 0x73, 0x12, 0x23, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x79, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0x22, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61,
	0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x62, 0x0a, 0x0f, 0x4c,
	0x69, 0x73, 0x74, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x26,
	0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x75, 0x6c, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x27, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e,
	0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x44, 0x0a, 0x08, 0x46, 0x69, 0x6e, 0x64, 0x46, 0x6c, 0x69, 0x70, 0x12, 0x1f, 0x2e, 0x66, 0x6f,
	0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x52, 0x65, 0x71, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x46, 0x6c, 0x69, 0x70, 0x1a, 0x17, 0x2e, 0x66,
	0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x46, 0x6c, 0x69, 0x70, 0x12, 0x50, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6c, 0x69,
	0x70, 0x73, 0x12, 0x20, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46,
	0x6c, 0x69, 0x70, 0x73, 0x1a, 0x21, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x46, 0x6c, 0x69, 0x70, 0x73, 0x12, 0x5f, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x46,
	0x6c, 0x69, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x25, 0x2e, 0x66, 0x6f, 0x78, 0x2e,
	0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65,
	0x71, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6c, 0x69, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x1a, 0x26, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x6c,
	0x69, 0x70, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x59, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x64,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x2e, 0x66, 0x6f,
	0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x52, 0x65, 0x71, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x1a, 0x1e, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x65, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61,
	0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x1a, 0x28, 0x2e, 0x66, 0x6f, 0x78, 0x2e, 0x70, 0x61, 0x6e, 0x64, 0x6f, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x3b,
	0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pando_proto_rawDescOnce sync.Once
	file_pando_proto_rawDescData = file_pando_proto_rawDesc
)

func file_pando_proto_rawDescGZIP() []byte {
	file_pando_proto_rawDescOnce.Do(func() {
		file_pando_proto_rawDescData = protoimpl.X.CompressGZIP(file_pando_proto_rawDescData)
	})
	return file_pando_proto_rawDescData
}

var file_pando_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_pando_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_pando_proto_goTypes = []interface{}{
	(Action)(0),                   // 0: fox.pando.service.Action
	(Transaction_Status)(0),       // 1: fox.pando.service.Transaction.Status
	(*Pagination)(nil),            // 2: fox.pando.service.Pagination
	(*Asset)(nil),                 // 3: fox.pando.service.Asset
	(*Collateral)(nil),            // 4: fox.pando.service.Collateral
	(*Vault)(nil),                 // 5: fox.pando.service.Vault
	(*Flip)(nil),                  // 6: fox.pando.service.Flip
	(*Oracle)(nil),                // 7: fox.pando.service.Oracle
	(*Transaction)(nil),           // 8: fox.pando.service.Transaction
	(*Req)(nil),                   // 9: fox.pando.service.Req
	(*Resp)(nil),                  // 10: fox.pando.service.Resp
	(*Vault_Event)(nil),           // 11: fox.pando.service.Vault.Event
	(*Flip_Event)(nil),            // 12: fox.pando.service.Flip.Event
	(*Req_FindAsset)(nil),         // 13: fox.pando.service.Req.FindAsset
	(*Req_ListAssets)(nil),        // 14: fox.pando.service.Req.ListAssets
	(*Req_FindOracle)(nil),        // 15: fox.pando.service.Req.FindOracle
	(*Req_ListOracles)(nil),       // 16: fox.pando.service.Req.ListOracles
	(*Req_ListCollaterals)(nil),   // 17: fox.pando.service.Req.ListCollaterals
	(*Req_FindCollateral)(nil),    // 18: fox.pando.service.Req.FindCollateral
	(*Req_FindVault)(nil),         // 19: fox.pando.service.Req.FindVault
	(*Req_ListVaults)(nil),        // 20: fox.pando.service.Req.ListVaults
	(*Req_ListMyVaults)(nil),      // 21: fox.pando.service.Req.ListMyVaults
	(*Req_ListVaultEvents)(nil),   // 22: fox.pando.service.Req.ListVaultEvents
	(*Req_FindFlip)(nil),          // 23: fox.pando.service.Req.FindFlip
	(*Req_ListFlips)(nil),         // 24: fox.pando.service.Req.ListFlips
	(*Req_ListFlipEvents)(nil),    // 25: fox.pando.service.Req.ListFlipEvents
	(*Req_FindTransaction)(nil),   // 26: fox.pando.service.Req.FindTransaction
	(*Req_ListTransactions)(nil),  // 27: fox.pando.service.Req.ListTransactions
	(*Resp_ListAssets)(nil),       // 28: fox.pando.service.Resp.ListAssets
	(*Resp_ListOracles)(nil),      // 29: fox.pando.service.Resp.ListOracles
	(*Resp_ListCollaterals)(nil),  // 30: fox.pando.service.Resp.ListCollaterals
	(*Resp_ListVaults)(nil),       // 31: fox.pando.service.Resp.ListVaults
	(*Resp_ListVaultEvents)(nil),  // 32: fox.pando.service.Resp.ListVaultEvents
	(*Resp_ListFlips)(nil),        // 33: fox.pando.service.Resp.ListFlips
	(*Resp_ListFlipEvents)(nil),   // 34: fox.pando.service.Resp.ListFlipEvents
	(*Resp_ListTransactions)(nil), // 35: fox.pando.service.Resp.ListTransactions
	(*timestamppb.Timestamp)(nil), // 36: google.protobuf.Timestamp
}
var file_pando_proto_depIdxs = []int32{
	3,  // 0: fox.pando.service.Asset.chain:type_name -> fox.pando.service.Asset
	36, // 1: fox.pando.service.Collateral.created_at:type_name -> google.protobuf.Timestamp
	36, // 2: fox.pando.service.Collateral.rho:type_name -> google.protobuf.Timestamp
	36, // 3: fox.pando.service.Vault.created_at:type_name -> google.protobuf.Timestamp
	36, // 4: fox.pando.service.Flip.created_at:type_name -> google.protobuf.Timestamp
	36, // 5: fox.pando.service.Flip.tic:type_name -> google.protobuf.Timestamp
	36, // 6: fox.pando.service.Flip.end:type_name -> google.protobuf.Timestamp
	0,  // 7: fox.pando.service.Flip.action:type_name -> fox.pando.service.Action
	36, // 8: fox.pando.service.Oracle.peek_at:type_name -> google.protobuf.Timestamp
	36, // 9: fox.pando.service.Transaction.created_at:type_name -> google.protobuf.Timestamp
	0,  // 10: fox.pando.service.Transaction.action:type_name -> fox.pando.service.Action
	1,  // 11: fox.pando.service.Transaction.status:type_name -> fox.pando.service.Transaction.Status
	36, // 12: fox.pando.service.Vault.Event.created_at:type_name -> google.protobuf.Timestamp
	0,  // 13: fox.pando.service.Vault.Event.action:type_name -> fox.pando.service.Action
	36, // 14: fox.pando.service.Flip.Event.created_at:type_name -> google.protobuf.Timestamp
	0,  // 15: fox.pando.service.Flip.Event.action:type_name -> fox.pando.service.Action
	3,  // 16: fox.pando.service.Resp.ListAssets.assets:type_name -> fox.pando.service.Asset
	7,  // 17: fox.pando.service.Resp.ListOracles.oracles:type_name -> fox.pando.service.Oracle
	4,  // 18: fox.pando.service.Resp.ListCollaterals.collaterals:type_name -> fox.pando.service.Collateral
	5,  // 19: fox.pando.service.Resp.ListVaults.vaults:type_name -> fox.pando.service.Vault
	2,  // 20: fox.pando.service.Resp.ListVaults.pagination:type_name -> fox.pando.service.Pagination
	11, // 21: fox.pando.service.Resp.ListVaultEvents.events:type_name -> fox.pando.service.Vault.Event
	6,  // 22: fox.pando.service.Resp.ListFlips.flips:type_name -> fox.pando.service.Flip
	2,  // 23: fox.pando.service.Resp.ListFlips.pagination:type_name -> fox.pando.service.Pagination
	12, // 24: fox.pando.service.Resp.ListFlipEvents.events:type_name -> fox.pando.service.Flip.Event
	8,  // 25: fox.pando.service.Resp.ListTransactions.transactions:type_name -> fox.pando.service.Transaction
	2,  // 26: fox.pando.service.Resp.ListTransactions.pagination:type_name -> fox.pando.service.Pagination
	13, // 27: fox.pando.service.Pando.FindAsset:input_type -> fox.pando.service.Req.FindAsset
	14, // 28: fox.pando.service.Pando.ListAssets:input_type -> fox.pando.service.Req.ListAssets
	15, // 29: fox.pando.service.Pando.FindOracle:input_type -> fox.pando.service.Req.FindOracle
	16, // 30: fox.pando.service.Pando.ListOracles:input_type -> fox.pando.service.Req.ListOracles
	17, // 31: fox.pando.service.Pando.ListCollaterals:input_type -> fox.pando.service.Req.ListCollaterals
	18, // 32: fox.pando.service.Pando.FindCollateral:input_type -> fox.pando.service.Req.FindCollateral
	19, // 33: fox.pando.service.Pando.FindVault:input_type -> fox.pando.service.Req.FindVault
	20, // 34: fox.pando.service.Pando.ListVaults:input_type -> fox.pando.service.Req.ListVaults
	21, // 35: fox.pando.service.Pando.ListMyVaults:input_type -> fox.pando.service.Req.ListMyVaults
	22, // 36: fox.pando.service.Pando.ListVaultEvents:input_type -> fox.pando.service.Req.ListVaultEvents
	23, // 37: fox.pando.service.Pando.FindFlip:input_type -> fox.pando.service.Req.FindFlip
	24, // 38: fox.pando.service.Pando.ListFlips:input_type -> fox.pando.service.Req.ListFlips
	25, // 39: fox.pando.service.Pando.ListFlipEvents:input_type -> fox.pando.service.Req.ListFlipEvents
	26, // 40: fox.pando.service.Pando.FindTransaction:input_type -> fox.pando.service.Req.FindTransaction
	27, // 41: fox.pando.service.Pando.ListTransactions:input_type -> fox.pando.service.Req.ListTransactions
	3,  // 42: fox.pando.service.Pando.FindAsset:output_type -> fox.pando.service.Asset
	28, // 43: fox.pando.service.Pando.ListAssets:output_type -> fox.pando.service.Resp.ListAssets
	7,  // 44: fox.pando.service.Pando.FindOracle:output_type -> fox.pando.service.Oracle
	29, // 45: fox.pando.service.Pando.ListOracles:output_type -> fox.pando.service.Resp.ListOracles
	30, // 46: fox.pando.service.Pando.ListCollaterals:output_type -> fox.pando.service.Resp.ListCollaterals
	4,  // 47: fox.pando.service.Pando.FindCollateral:output_type -> fox.pando.service.Collateral
	5,  // 48: fox.pando.service.Pando.FindVault:output_type -> fox.pando.service.Vault
	31, // 49: fox.pando.service.Pando.ListVaults:output_type -> fox.pando.service.Resp.ListVaults
	31, // 50: fox.pando.service.Pando.ListMyVaults:output_type -> fox.pando.service.Resp.ListVaults
	32, // 51: fox.pando.service.Pando.ListVaultEvents:output_type -> fox.pando.service.Resp.ListVaultEvents
	6,  // 52: fox.pando.service.Pando.FindFlip:output_type -> fox.pando.service.Flip
	33, // 53: fox.pando.service.Pando.ListFlips:output_type -> fox.pando.service.Resp.ListFlips
	34, // 54: fox.pando.service.Pando.ListFlipEvents:output_type -> fox.pando.service.Resp.ListFlipEvents
	8,  // 55: fox.pando.service.Pando.FindTransaction:output_type -> fox.pando.service.Transaction
	35, // 56: fox.pando.service.Pando.ListTransactions:output_type -> fox.pando.service.Resp.ListTransactions
	42, // [42:57] is the sub-list for method output_type
	27, // [27:42] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_pando_proto_init() }
func file_pando_proto_init() {
	if File_pando_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pando_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Asset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Collateral); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vault); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Flip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Oracle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Req); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Vault_Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Flip_Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Req_FindAsset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Req_ListAssets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Req_FindOracle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Req_ListOracles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Req_ListCollaterals); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Req_FindCollateral); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Req_FindVault); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Req_ListVaults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Req_ListMyVaults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Req_ListVaultEvents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Req_FindFlip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Req_ListFlips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Req_ListFlipEvents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Req_FindTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Req_ListTransactions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resp_ListAssets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resp_ListOracles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resp_ListCollaterals); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resp_ListVaults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resp_ListVaultEvents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resp_ListFlips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resp_ListFlipEvents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pando_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resp_ListTransactions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pando_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pando_proto_goTypes,
		DependencyIndexes: file_pando_proto_depIdxs,
		EnumInfos:         file_pando_proto_enumTypes,
		MessageInfos:      file_pando_proto_msgTypes,
	}.Build()
	File_pando_proto = out.File
	file_pando_proto_rawDesc = nil
	file_pando_proto_goTypes = nil
	file_pando_proto_depIdxs = nil
}
