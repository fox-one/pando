basePath: /api
definitions:
  actions.CreateRequest:
    properties:
      amount:
        description: payment amount (optional)
        type: number
      asset_id:
        description: payment asset id (optional)
        format: uuid
        type: string
      follow_id:
        description: follow id to track tx (uuid)
        format: uuid
        type: string
      parameters:
        description: tx parameters
        items:
          type: string
        type: array
    type: object
  actions.CreateResponse:
    properties:
      code:
        description: multisig payment code
        type: string
      code_url:
        description: multisig payment code url
        type: string
      memo:
        description: payment memo
        type: string
    type: object
  api.Asset:
    properties:
      chain:
        $ref: '#/definitions/api.Asset'
      chain_id:
        type: string
      id:
        description: mixin asset id
        type: string
      logo:
        type: string
      name:
        type: string
      price:
        type: string
      symbol:
        type: string
    type: object
  api.Collateral:
    properties:
      art:
        type: string
      beg:
        type: string
      box:
        type: string
      chop:
        type: string
      created_at:
        description: '@inject_tag: swaggertype:"string" format:"date"'
        format: date
        type: string
      dai:
        type: string
      debt:
        type: string
      dunk:
        type: string
      dust:
        type: string
      duty:
        type: string
      gem:
        type: string
      id:
        type: string
      ink:
        type: string
      line:
        type: string
      litter:
        type: string
      live:
        type: boolean
      mat:
        type: string
      name:
        type: string
      number_of_vaults:
        type: integer
      price:
        type: string
      rate:
        type: string
      rho:
        description: '@inject_tag: swaggertype:"string" format:"date"'
        format: date
        type: string
      supply:
        type: string
      tau:
        type: integer
      ttl:
        type: integer
    type: object
  api.Flip:
    properties:
      action:
        type: integer
      art:
        type: string
      bid:
        type: string
      collateral_id:
        type: string
      created_at:
        description: '@inject_tag: swaggertype:"string" format:"date"'
        format: date
        type: string
      end:
        description: '@inject_tag: swaggertype:"string" format:"date"'
        format: date
        type: string
      guy:
        type: string
      id:
        type: string
      lot:
        type: string
      tab:
        type: string
      tic:
        description: '@inject_tag: swaggertype:"string" format:"date"'
        format: date
        type: string
      vault_id:
        type: string
    type: object
  api.Flip_Event:
    properties:
      action:
        type: integer
      bid:
        type: string
      created_at:
        description: '@inject_tag: swaggertype:"string" format:"date"'
        format: date
        type: string
      flip_id:
        type: string
      is_me:
        type: boolean
      lot:
        type: string
    type: object
  api.Oracle:
    properties:
      asset_id:
        type: string
      current:
        type: string
      governors:
        items:
          type: string
        type: array
      hop:
        type: integer
      next:
        type: string
      peek_at:
        description: |-
          @inject_tag: swaggertype:"string" format:"date"
          last update of current price
        format: date
        type: string
      threshold:
        type: integer
    type: object
  api.Pagination:
    properties:
      has_next:
        type: boolean
      next_cursor:
        type: string
    type: object
  api.Proposal:
    properties:
      action:
        type: integer
      amount:
        type: string
      asset_id:
        type: string
      created_at:
        description: '@inject_tag: swaggertype:"string" format:"date"'
        format: date
        type: string
      creator:
        type: string
      data:
        type: string
      id:
        type: string
      items:
        items:
          $ref: '#/definitions/api.Proposal_Item'
        type: array
      passed_at:
        description: '@inject_tag: swaggertype:"string" format:"date"'
        format: date
        type: string
      votes:
        items:
          type: string
        type: array
    type: object
  api.Proposal_Item:
    properties:
      action:
        type: string
      hint:
        type: string
      key:
        type: string
      value:
        type: string
    type: object
  api.Resp_ListAssets:
    properties:
      assets:
        items:
          $ref: '#/definitions/api.Asset'
        type: array
    type: object
  api.Resp_ListCollaterals:
    properties:
      collaterals:
        items:
          $ref: '#/definitions/api.Collateral'
        type: array
    type: object
  api.Resp_ListFlipEvents:
    properties:
      events:
        items:
          $ref: '#/definitions/api.Flip_Event'
        type: array
    type: object
  api.Resp_ListFlips:
    properties:
      flips:
        items:
          $ref: '#/definitions/api.Flip'
        type: array
      pagination:
        $ref: '#/definitions/api.Pagination'
    type: object
  api.Resp_ListOracles:
    properties:
      oracles:
        items:
          $ref: '#/definitions/api.Oracle'
        type: array
    type: object
  api.Resp_ListProposals:
    properties:
      pagination:
        $ref: '#/definitions/api.Pagination'
      proposals:
        items:
          $ref: '#/definitions/api.Proposal'
        type: array
    type: object
  api.Resp_ListTransactions:
    properties:
      pagination:
        $ref: '#/definitions/api.Pagination'
      transactions:
        items:
          $ref: '#/definitions/api.Transaction'
        type: array
    type: object
  api.Resp_ListVaultEvents:
    properties:
      events:
        items:
          $ref: '#/definitions/api.Vault_Event'
        type: array
    type: object
  api.Resp_ListVaults:
    properties:
      pagination:
        $ref: '#/definitions/api.Pagination'
      vaults:
        items:
          $ref: '#/definitions/api.Vault'
        type: array
    type: object
  api.Transaction:
    properties:
      action:
        type: integer
      amount:
        type: string
      asset_id:
        type: string
      created_at:
        description: '@inject_tag: swaggertype:"string" format:"date"'
        format: date
        type: string
      id:
        type: string
      msg:
        type: string
      parameters:
        type: string
      status:
        type: integer
    type: object
  api.Vault:
    properties:
      art:
        type: string
      collateral_id:
        type: string
      created_at:
        description: '@inject_tag: swaggertype:"string" format:"date"'
        format: date
        type: string
      id:
        type: string
      identity_id:
        type: integer
      ink:
        type: string
    type: object
  api.Vault_Event:
    properties:
      action:
        type: integer
      created_at:
        description: '@inject_tag: swaggertype:"string" format:"date"'
        format: date
        type: string
      dart:
        type: string
      debt:
        type: string
      dink:
        type: string
      vault_id:
        type: string
    type: object
  system.InfoResponse:
    properties:
      members:
        description: multisig members
        items:
          type: string
        type: array
      oauth_client_id:
        description: oauth client id
        format: uuid
        type: string
      public_key:
        type: string
      threshold:
        description: multisig threshold
        type: integer
    type: object
  system.TimeResponse:
    properties:
      epoch:
        type: integer
      iso:
        type: string
    type: object
  user.LoginRequest:
    properties:
      code:
        description: mixin oauth code
        type: string
    type: object
  user.LoginResponse:
    properties:
      avatar:
        description: user avatar
        type: string
      id:
        description: user mixin id
        format: uuid
        type: string
      language:
        description: Preferred language
        type: string
      name:
        description: user name
        type: string
      scope:
        description: mixin oauth scope
        type: string
      token:
        description: mixin oauth token
        type: string
    type: object
host: pando-test-api.fox.one
info:
  contact:
    email: support@pando.im
    name: API Support
    url: http://www.pando.im/support
  description: Pando Api Doc
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://pando.im/terms/
  title: Pando API
  version: "1.0"
paths:
  /actions:
    post:
      consumes:
      - application/json
      parameters:
      - description: request payments
        in: body
        name: request
        schema:
          $ref: '#/definitions/actions.CreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/actions.CreateResponse'
      summary: request payment code
      tags:
      - actions
  /assets:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Resp_ListAssets'
      summary: list assets
      tags:
      - Assets
  /assets/{asset_id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: mixin asset id
        in: path
        name: asset_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Asset'
      summary: Find Asset By ID
      tags:
      - Assets
  /cats:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Resp_ListCollaterals'
      summary: list all collateral
      tags:
      - Collaterals
  /cats/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: collateral id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Collateral'
      summary: find collateral by id
      tags:
      - Collaterals
  /flips:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: cursor
        type: string
      - in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Resp_ListFlips'
      summary: list flips
      tags:
      - Flips
  /flips/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: flip id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Flip'
      summary: find flip by id
      tags:
      - Flips
  /flips/{id}/events:
    get:
      consumes:
      - application/json
      parameters:
      - description: flip id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Resp_ListFlipEvents'
      summary: list flip events
      tags:
      - Flips
  /info:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/system.InfoResponse'
      summary: Show system info
      tags:
      - system
  /login:
    post:
      consumes:
      - application/json
      parameters:
      - description: request login
        in: body
        name: request
        schema:
          $ref: '#/definitions/user.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.LoginResponse'
      summary: login with mixin oauth code
      tags:
      - user
  /me/vats:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: cursor
        type: string
      - in: query
        name: limit
        type: integer
      - description: 'Example: Bearer foo'
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Resp_ListVaults'
      summary: list my vaults
      tags:
      - Vaults
  /oracles:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Resp_ListOracles'
      summary: list all oracles
      tags:
      - Oracles
  /oracles/{asset_id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: mixin asset id
        in: path
        name: asset_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Oracle'
      summary: find oracle by asset id
      tags:
      - Oracles
  /proposals:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: cursor
        type: string
      - in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Resp_ListProposals'
      summary: list proposals
      tags:
      - Proposals
  /proposals/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: proposal id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Proposal'
      summary: find proposal by id
      tags:
      - Proposals
  /time:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/system.TimeResponse'
      summary: Show server time
      tags:
      - system
  /transactions:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: cursor
        type: string
      - in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Resp_ListTransactions'
      summary: list transactions
      tags:
      - Transactions
  /transactions/{follow_id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: 'Example: Bearer foo'
        in: header
        name: Authorization
        required: true
        type: string
      - description: follow id
        in: path
        name: follow_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Transaction'
      summary: find tx by follow id
      tags:
      - Transactions
  /vats:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: collateral_id
        type: string
      - in: query
        name: cursor
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: user_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Resp_ListVaults'
      summary: list vaults
      tags:
      - Vaults
  /vats/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: vault id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Vault'
      summary: find vault by id
      tags:
      - Vaults
  /vats/{id}/events:
    get:
      consumes:
      - application/json
      parameters:
      - description: vault id
        in: path
        name: id
        required: true
        type: string
      - description: '@inject_tag: valid:"uuid,required"'
        in: query
        name: id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.Resp_ListVaultEvents'
      summary: list vault events
      tags:
      - Vaults
schemes:
- https
- http
swagger: "2.0"
